name: Python CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Cache de pip (optimización)
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest  # Si no está en requirements.txt

      # Verificación de formato con Black (como ya tenías)
      - name: Check code formatting with Black
        run: |
          black --check .

      - name: Run tests with pytest
        run: |
          pytest tests/ --verbose

      # Opcional: Subir reporte de cobertura como artifact (si usas pytest-cov)
      - name: Upload coverage report
        if: always() # Sube el reporte incluso si fallan los tests
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.python-version }}
          path: ./coverage.xml
